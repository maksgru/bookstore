{"version":3,"sources":["actions/action-types.ts","actions/authActions.ts","components/navbar/UserIcon.tsx","components/pages/auth/auth-components.tsx","actions/errorActions.ts","api/axios.ts","api/authApi.ts","components/pages/auth/loginPage.tsx","components/pages/auth/AuthModal.tsx","actions/sidebarActions.ts","components/navbar/NavBar.tsx","actions/pageActions.ts","actions/favoritesActions.ts","api/bookApi.ts","actions/bookActions.ts","actions/authorActions.ts","actions/filterActions.ts","components/filter-panel/Authors.tsx","actions/generActions.ts","components/filter-panel/Geners.tsx","actions/priceActions.ts","components/filter-panel/Price.tsx","components/filter-panel/Rating.tsx","components/filter-panel/FilterPanel.tsx","actions/sortActions.ts","components/sort-form/SortForrm.tsx","components/book-list/PaginationForm.tsx","components/book-list/CardFooter.tsx","components/book-list/BookCard.tsx","components/spinner/Spinner.tsx","components/book-list/BookList.tsx","components/sidebar/SideBar.tsx","components/main/Main.tsx","api/uploadApi.ts","components/pages/user/UserCard.tsx","components/pages/user/profile-tabs/AddBookTab.tsx","components/pages/user/profile-tabs/FavoriteBooksTab.tsx","components/pages/user/UserTabs.tsx","components/pages/user/UserPage.tsx","components/pages/book-page/DescriptionForm.tsx","components/pages/book-page/AddImageForm.tsx","actions/rewiewActions.ts","api/reviewApi.ts","components/pages/book-page/CommentForm.tsx","components/pages/book-page/ChangeComment.tsx","components/pages/book-page/TextForm.tsx","components/pages/book-page/CommentItem.tsx","components/pages/book-page/Comment.tsx","components/pages/book-page/BookImagesSlider.tsx","components/pages/book-page/BookPage.tsx","components/app/Routes.tsx","components/error-notice/ErrorNotice.tsx","components/app/App.tsx","actions/viewportActions.ts","reportWebVitals.ts","reducers/bookPage.ts","reducers/geners.ts","reducers/authors.ts","reducers/auth.ts","reducers/price.ts","reducers/error.ts","reducers/filter.ts","reducers/favorites.ts","reducers/reviews.ts","reducers/bookList.ts","reducers/sidebar.ts","reducers/viewport.ts","reducers/sort.ts","reducers/page.ts","reducers/index.ts","index.tsx"],"names":["actionTypes","update","user","type","payload","signOut","dropUserData","changeUserImg","handleUserData","data","localStorage","setItem","tokens","accessToken","refreshToken","userData","removeItem","socket","io","UserIcon","iconUrl","userName","userId","useSelector","state","auth","id","useState","isNoticeShow","setNotice","useEffect","on","className","area-hidden","to","style","textDecoration","Figure","Image","width","height","alt","src","UserName","handleName","Form","Group","InputGroup","Prepend","Text","Control","name","onChange","placeholder","UserEmail","handleEmail","controlId","Password","handlePassword","FormButtons","submitBtnText","toggleBtnText","togglePage","Button","onClick","variant","size","block","disabled","error","axiosInstance","axios","create","baseURL","interceptors","request","use","token","getItem","headers","Authorization","response","err","originalRequest","config","status","refreshUrl","store","dispatch","url","post","then","res","setTokens","catch","a","updateUserData","login","register","newUser","email","password","LoginPage","props","handleChange","e","value","target","key","setState","preventDefault","pageName","signIn","confirmedPassword","isPasswordsMatch","handlePasswordConfirm","submitBtn","toggleBtn","Jumbotron","maxHeight","onSubmit","this","minWidth","textAlign","marginBottom","Alert","Component","mdtp","connect","AuthModal","Modal","aria-labelledby","centered","Header","closeButton","showSidebar","hideSidebar","NavBar","useDispatch","userIcon","userImg","isLoggedIn","sidebarState","sidebar","viewportWidth","viewport","modalShow","setModalShow","modal","faType","faText","Navbar","expand","bg","show","onHide","Container","Brand","href","aria-hidden","setPage","page","favoritesLoaded","books","getAllBooks","getState","sort","sortTarget","direction","gener","filter","price","rating","authors","get","params","bookList","rows","pageCount","count","getBook","bookDetails","setBookDescription","description","patch","addNewBook","formData","method","handleFavorites","bookId","delete","emit","getFavorites","favoriteBooks","getData","authorsLoaded","map","author","handleAuthors","handlePrice","handleRating","Authors","selectedAuthors","checked","loadAuthors","Check","label","genersLoaded","geners","Geners","currentGener","handleClick","innerText","handleGener","loadGeners","generName","selected","Nav","Link","onFocus","priceLoaded","priceRange","Price","min","max","split","minPrice","maxPrice","loadPriceRange","maxWidth","range","start","onUpdate","args","Math","floor","Row","Col","Badge","ceil","RatingForm","stars","Array","from","keys","currentTarget","item","starType","toString","FilterPanel","Rating","setSortDirection","SortForm","sortDirection","handleSort","toLowerCase","handleDirection","ButtonGroup","DropdownButton","as","title","charAt","toUpperCase","slice","Dropdown","Item","eventKey","PaginationForm","handleFocus","pageNumber","pages","Pagination","Prev","active","Next","CardFooter","isAuth","favorites","fav","setFav","addFavorites","every","book","Card","Footer","idx","OverlayTrigger","overlay","Tooltip","BookCard","bookIcon","Img","Body","writer","toFixed","Spinner","BookList","loading","CardGroup","Sidebar","isVisible","border","children","Main","isSidebarVisible","addUserAvatar","addBookImage","images","UserCard","isFormEmpty","setForm","file","setFile","FormData","submitUserImg","append","Title","File","files","AddBookTab","initialState","bookImage","isSendPossible","checkForm","console","log","handleFile","createBook","setAuthors","setGeners","Label","defaultValue","hidden","FavoreteBooksTab","delFavorites","ListGroup","rounded","UserTabs","link","setLink","handleTab","currentLink","UserPage","DescriptionForm","isShow","isFormShow","setFormShow","descriptionText","setDescriptionText","handleForm","AddImageForm","setLabel","submitForm","menuAlign","ItemText","aria-describedby","htmlFor","reviewsLoaded","bookReviews","getReviews","reviews","setReview","review","patchReview","deleteReview","CommentForm","bookPage","comment","setComment","grade","setGrade","ChangeComment","handleDelete","TextForm","toggleForm","initialValue","initialGrade","formText","setFormText","CommentItem","isCommentChangeble","reviewer","text","Comment","reviewUserId","reviewerId","isReviewPossible","SwiperCore","Navigation","Controller","Thumbs","BookImagesSlider","thumbsSwiper","setThumbsSwiper","slides","image","tag","listStyle","thumbs","Fragment","swiper","wrapperTag","navigation","pagination","spaceBetween","slidesPerView","onSwiper","BookPage","bookImages","isBookUsers","img","Routes","path","exact","component","ErrorNotice","Heading","App","handleWidth","window","innerWidth","setViewportWidth","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","bookPageReducer","action","genersReducer","authorsReducer","authReducer","priceReducer","errorReducer","filterState","filterReducer","favoritesReducer","reviewState","reviewReducer","bookListReducer","sidebarReducer","viewportReducer","sortReducer","pageRaducer","reducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b47ca52.chunk.js","sourcesContent":["export const actionTypes = {\n  SIGN_IN: 'SIGN_IN',\n  SIGN_OUT: 'SIGN_OUT',\n  UPDATE: 'UPDATE',\n  BOOKS_LIST_REQUEST: 'BOOKS_LOAD_REQUEST', // probably useless\n  BOOKS_LIST_SUCCESS: 'BOOKS_LOAD_SUCCESS',\n  BOOKS_LIST_FAILURE: 'BOOKS_LOAD_FAILURE', // probably useless\n  BOOK_DETAILS_SUCCESS: 'BOOK_PAGE_SUCCESS',\n  REQUEST_SUCCESS: 'REQUEST_SUCCESS', // probably useless\n  REQUEST_FAILURE: 'REQUEST_FAILURE',\n  GENER_LIST_LOADED: 'GENER_LIST_LOADED',\n  AUTHOR_LIST_LOADED: 'AUTHOR_LIST_LOADED',\n  PRICE_RANGE_LOADED: 'PRICE_RANGE_LOADED',\n  CHANGE_USER_IMG: 'CHANGE_USER_IMG',\n  SET_PRICE: 'SET_PRICE',\n  SET_RATING: 'SET_RATING',\n  SET_GENER: 'SET_GENER',\n  SET_AUTHORS: 'SET_AUTHORS',\n  FAVORITES_LOADED: 'FAVORITES_LOADED',\n  REVIEWS_LOADED: 'REVIEWS_LOADED',\n  BOOK_IMAGES_LOADED: 'BOOK_IMAGES_LOADED',\n  SHOW_SIDEBAR: 'SHOW_SIDEBAR',\n  HIDE_SIDEBAR: 'HIDE_SIDEBAR',\n  SET_VIEWPORT_WIDTH: 'SET_VIEWPORT_WIDTH',\n  SET_SORT_TARGET: 'SET_SORT_TARGET',\n  SET_SORT_DIRECTION: 'SET_SORT_DIRECTION',\n  SET_PAGE_NUMBER: 'SET_PAGE_NUMBER',\n  SET_PAGE_COUNT: 'SET_PAGE_COUNT'\n};","import { actionTypes } from './action-types'\n\nexport interface userType {\n  id: number;\n  userName: string;\n  iconUrl: string;\n}\n\nexport interface UserDataType {\n  userData: userType;\n  tokens: {\n    accessToken: string;\n    refreshToken: string;\n  }\n};\n\n\nexport const signIn = (userData: UserDataType) => ({\n  type: actionTypes.SIGN_IN,\n  payload: handleUserData(userData)\n});\n\nexport const update = (user: userType) => ({\n  type: actionTypes.SIGN_IN,\n  payload: user\n});\n\nexport const signOut = () => {\n  dropUserData();\n  return { type: actionTypes.SIGN_OUT };\n};\n\nexport const changeUserImg = (user: userType) => ({\n  type: actionTypes.CHANGE_USER_IMG,\n  payload: user\n})\n\nconst handleUserData = (data: UserDataType) => {\n  localStorage.setItem('token', data.tokens.accessToken);\n  localStorage.setItem('refreshToken', data.tokens.refreshToken);\n  return data.userData;\n};\n\nconst dropUserData = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('refreshToken');\n};","import React, { useEffect, useState } from \"react\";\nimport { Figure } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { io } from \"socket.io-client\";\nimport { RootState } from \"../../reducers\";\nexport const socket = io(\"http://localhost:4000/\");\n\ninterface userIconType {\n  iconUrl: string;\n  userName: string;\n}\n\nconst UserIcon = ({ iconUrl, userName }: userIconType) => {\n  const { userId } = useSelector((state: RootState) => ({\n    userId: state.auth.id\n  }));\n  const [isNoticeShow, setNotice] = useState(false);\n  useEffect(() => {\n    const showNotice = () => {\n      setNotice(true);\n    };\n    socket.on(\"newBook\", (data: {userId: string}) => {\n      if (data.userId !== `${userId}`) showNotice();\n    });\n  }, [isNoticeShow, userId]);\n  return (\n    <>\n      {isNoticeShow && (\n        <i className=\"fa fa-bell mr-3 text-warning\" area-hidden=\"true\" />\n      )}\n      <Link\n        to=\"/profile\"\n        className=\"p-0 mr-4 btn-bdnone\"\n        style={{ textDecoration: \"none\" }}\n      >\n        <span className=\"mr-4\">{userName}</span>\n        <Figure className=\"m-0\">\n          <Figure.Image\n            className=\"m-0 rounded-circle\"\n            width={60}\n            height={60}\n            alt=\"\"\n            src={iconUrl}\n          />\n        </Figure>\n      </Link>\n    </>\n  );\n};\nexport default UserIcon;\n","import React from \"react\";\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\n\ntype UserNameProps = {\n  handleName: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const UserName = ({ handleName }: UserNameProps) => {\n  return (\n    <Form.Group>\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>\n            <i className=\"fa fa-user fa-fw\" />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          name=\"userName\"\n          onChange={handleName}\n          placeholder=\"Enter your name\"\n        />\n      </InputGroup>\n    </Form.Group>\n  );\n};\n\ntype UserEmailProps = {\n  handleEmail: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const UserEmail = ({ handleEmail }: UserEmailProps) => {\n  return (\n    <Form.Group controlId=\"formBasicEmail\">\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>\n            <i className=\"fa fa-envelope fa-fw\" />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          name=\"email\"\n          onChange={handleEmail}\n          type=\"email\"\n          placeholder=\"Enter email\"\n        />\n      </InputGroup>\n    </Form.Group>\n  );\n};\n\ntype PasswordProps = {\n  handlePassword: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder: string;\n};\n\nexport const Password = ({ handlePassword, placeholder }: PasswordProps) => {\n  return (\n    <Form.Group controlId=\"formBasicPassword\">\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>\n            <i className=\"fa fa-lock fa-fw\" />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          name=\"password\"\n          onChange={handlePassword}\n          type=\"password\"\n          placeholder={placeholder}\n        />\n      </InputGroup>\n    </Form.Group>\n  );\n};\n\ntype FormButtonsProps = {\n  submitBtnText: string;\n  toggleBtnText: string;\n  togglePage: VoidFunction;\n};\n\nexport const FormButtons = ({\n  submitBtnText,\n  toggleBtnText,\n  togglePage,\n}: FormButtonsProps) => {\n  return (\n    <>\n      <Button onClick={togglePage} className=\"btn-tog float-right\" variant=\"link\" size=\"sm\">\n        {toggleBtnText}\n      </Button>\n      <Button variant=\"primary\" type=\"submit\" block disabled={false}>\n        {submitBtnText}\n      </Button>\n    </>\n  );\n};\n","import { actionTypes } from \"./action-types\";\n\nexport const error = {type: actionTypes.REQUEST_FAILURE};\nexport const success = {type: actionTypes.REQUEST_SUCCESS};","import axios from 'axios';\nimport { signOut, update, userType } from '../actions/authActions';\nimport { error } from '../actions/errorActions';\nimport { store } from '../index';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://ec2-3-127-148-123.eu-central-1.compute.amazonaws.com:4000',\n});\n\n\naxiosInstance.interceptors.request.use((request) => {\n  const token = localStorage.getItem('token');\n  if (!request.headers) {\n    request.headers = {};\n  }\n  request.headers.Authorization = `Bearer ${token}`;\n  return request;\n});\n\naxiosInstance.interceptors.response.use(\n  ({ data }) => {\n    return data;\n  },\n  (err) => {\n    const originalRequest = err.config;\n    const { status } = err.response;\n    const refreshUrl = 'http://localhost:4000/auth/refresh-tokens';\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (!refreshToken) {\n      store.dispatch(signOut());\n      throw err\n    }\n    if (status === 401 && originalRequest.url !== refreshUrl) {\n      return axios.post(refreshUrl, { refreshToken })\n        .then((res) => {\n          const tokens = {\n            accessToken: res.data.accessToken,\n            refreshToken: res.data.refreshToken\n          }\n          setTokens(tokens);\n          originalRequest.headers.Authorization = `Bearer ${res.data.accessToken}`\n          return axios(originalRequest)\n            .then(({ data }) => data)\n        })\n        .catch((err) => {\n          if (err.response.status === 401) {\n            store.dispatch(signOut());\n            return;\n          }\n        });\n    }\n    store.dispatch(error);\n    throw err;\n  }\n);\n\ninterface tokensType {\n  accessToken: string;\n  refreshToken: string;\n}\n\n\nconst setTokens = (tokens: tokensType) => {\n  localStorage.setItem('token', tokens.accessToken);\n  localStorage.setItem('refreshToken', tokens.refreshToken);\n}\n\nexport const updateUserData = async () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    try {\n      const user: userType = await axiosInstance.post(`/auth/update`);\n      if (user) {\n        store.dispatch(update(user))\n      }\n    } catch (err) {\n      throw err\n    }\n  }\n};\nupdateUserData();\n\nexport default axiosInstance;","import axios from './axios';\n\ninterface LoginType {\n    email: string;\n    password: string;\n}\n\nexport const login = async (user: LoginType) => {\n    const data = await axios.post('/auth/signin', user)\n    return data;\n};\n\ninterface RegisterType extends LoginType {\n    name: string;\n}\nexport const register = async (user: RegisterType) => {\n    await axios.post('/auth/signup', user);\n    const newUser: LoginType = {\n        email: user.email,\n        password: user.password\n    };\n    return await login(newUser);\n}","import React, { Component } from \"react\";\nimport { UserName, UserEmail, Password, FormButtons } from \"./auth-components\";\nimport { Form, Jumbotron, Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut, UserDataType } from \"../../../actions/authActions\";\nimport { login, register } from \"../../../api/authApi\";\n\ninterface Lprops {\n  signIn: Function;\n  signOut: Function;\n}\n\ninterface Lstate {\n  userName: string;\n  email: string;\n  password: string;\n  confirmedPassword: string;\n  submitBtn: string;\n  toggleBtn: string;\n  pageName: string;\n  error: boolean;\n  isPasswordsMatch: boolean;\n}\n\nclass LoginPage extends Component<Lprops, Lstate> {\n  constructor(props: Lprops) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmedPassword: '',\n      submitBtn: \"LogIn\",\n      toggleBtn: \"Register\",\n      pageName: \"login\",\n      error: false,\n      isPasswordsMatch: false,\n    };\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    const key = e.target.name;\n    this.setState({ [key]: value } as any);\n  };\n\n  auth = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    let user;\n    if (this.state.pageName === \"login\") {\n      user = {\n        email: this.state.email,\n        password: this.state.password,\n      };\n      try {\n        const data = await login(user);\n        this.setState({ userName: \"\", email: \"\", password: \"\" });\n        this.props.signIn(data);\n        return;\n      } catch (err) {\n        this.setState({ error: true });\n      }\n      this.props.signOut();\n    }\n    if (this.state.pageName === \"register\") {\n      if (this.state.password !== this.state.confirmedPassword) {\n        this.setState({error: true});\n        return\n      };\n      user = {\n        name: this.state.userName,\n        email: this.state.email,\n        password: this.state.password,\n      };\n      try {\n        const data = await register(user);\n        this.setState({ userName: \"\", email: \"\", password: \"\" });\n        this.props.signIn(data);\n        return;\n      } catch (err) {\n        this.setState({ error: true });\n      }\n      this.props.signOut();\n    }\n  };\n\n  handlePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    this.setState({password: value});\n    if (this.state.confirmedPassword !== value) {\n      this.setState({isPasswordsMatch: true})\n    } else {\n      this.setState({isPasswordsMatch: false})\n    }\n  };\n  handlePasswordConfirm = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    this.setState({confirmedPassword: value});\n    if (this.state.password !== value) {\n      this.setState({isPasswordsMatch: true})\n    } else {\n      this.setState({isPasswordsMatch: false})\n    }\n  };\n\n  togglePage = () => {\n    this.setState((state: Lstate) => {\n      const pageName = state.pageName === \"login\" ? \"register\" : \"login\";\n      const submitBtn = state.toggleBtn;\n      const toggleBtn = state.submitBtn;\n      return { submitBtn, toggleBtn, pageName };\n    });\n  };\n\n  render() {\n    return (\n      <Jumbotron\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ maxHeight: \"80vh\" }}\n      >\n        <Form onSubmit={this.auth} style={{ minWidth: \"25%\" }}>\n          <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n            <h1>\n              book <strong>STORE</strong>\n            </h1>\n          </div>\n          {this.state.pageName === \"register\" && (\n            <UserName handleName={this.handleChange} />\n          )}\n          <UserEmail handleEmail={this.handleChange} />\n          <Password handlePassword={this.handlePassword} placeholder=\"Password\" />\n          {(this.state.isPasswordsMatch && this.state.pageName === 'register') && (\n            <Form.Text className=\"text-danger\">\n              Passwords do not match!\n            </Form.Text>\n          )}\n          {this.state.pageName === \"register\" && (\n            <Password\n              handlePassword={this.handlePasswordConfirm}\n              placeholder=\"Confirm password\"\n            />\n          )}\n          <FormButtons\n            submitBtnText={this.state.submitBtn}\n            toggleBtnText={this.state.toggleBtn}\n            togglePage={this.togglePage}\n          />\n          {this.state.error && (\n            <Alert variant=\"danger mt-5\">\n              {`Incorrect ${this.state.pageName} data!`}<br/>{`Please insert correct data and try again...`}\n            </Alert>\n          )}\n        </Form>\n      </Jumbotron>\n    );\n  }\n}\n\nconst mdtp = {\n  signIn: (user: UserDataType) => signIn(user),\n  signOut: () => signOut()\n};\n\nexport default connect(null, mdtp)(LoginPage);\n","import React from 'react';\nimport { Modal } from 'react-bootstrap'\nimport LoginPage from './loginPage';\n\ntype AuthModalType = {\n  show: boolean;\n  onHide: VoidFunction;\n}\n\nfunction AuthModal(props: AuthModalType) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n      </Modal.Header>\n        <LoginPage />\n    </Modal>\n  );\n}\n\nexport default AuthModal;","import { actionTypes } from \"./action-types\";\n\nexport const showSidebar = {type: actionTypes.SHOW_SIDEBAR};\nexport const hideSidebar = {type: actionTypes.HIDE_SIDEBAR};","import React, { useState } from \"react\";\nimport { Navbar, Container, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signOut } from \"../../actions/authActions\";\nimport UserIcon from \"./UserIcon\";\nimport AuthModal from \"../pages/auth/AuthModal\";\nimport { RootState } from \"../../reducers\";\nimport { hideSidebar, showSidebar } from \"../../actions/sidebarActions\";\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const { userName, userIcon, isLoggedIn, sidebarState, viewportWidth } = useSelector((state: RootState) => ({\n    userName: state.auth.name,\n    userIcon: state.auth.userImg, \n    isLoggedIn: state.auth.isLoggedIn,\n    sidebarState: state.sidebar,\n    viewportWidth: state.viewport\n  }));\n  const [modalShow, setModalShow] = useState(false);\n  let modal = true;\n  const faType: string = isLoggedIn ? \"in\" : \"out\";\n  const faText: string = isLoggedIn ? \"Out\" : \"In\";\n\n  const authAction = () => {\n    return isLoggedIn ? dispatch(signOut()) : setModalShow(true);\n  };\n\n  const toggleSidebar = () => {\n    sidebarState ? dispatch(hideSidebar) : dispatch(showSidebar);\n  };\n\n  if (isLoggedIn) modal = false;\n  return (\n    <Navbar expand=\"md\" bg=\"dark\" variant=\"dark\" className=\"mb-3\">\n      {modal && <AuthModal show={modalShow} onHide={() => setModalShow(false)} />}\n      <Container>\n       <div>\n          {viewportWidth <= 768 && <Button variant='dark' onClick={toggleSidebar}>| | |</Button>}\n          {viewportWidth > 768 && <Navbar.Brand href=\"/\" className=\"align-middle\">bookSTORE</Navbar.Brand>}\n       </div>\n        <span className=\"navbar-text\">\n          {isLoggedIn && <UserIcon iconUrl={userIcon} userName={userName} />}\n          <Button\n            onClick={authAction}\n            variant=\"outline-info btn-tog btn-bdnone m-0\"\n          >\n            <i className={`fa fa-sign-${faType} fa-2x`} aria-hidden=\"true\" />\n            Sign {faText}\n          </Button>\n        </span>\n      </Container>\n    </Navbar>\n  );\n};\n\n\nexport default NavBar;\n","import { actionTypes } from \"./action-types\";\n\nexport interface SetPageType {\n  type: string;\n  payload: number;\n};\n\nexport const setPage = (page: number) => ({\n  type: actionTypes.SET_PAGE_NUMBER,\n  payload:page\n});\n\nexport const setPageCount = (pageCount: number) => ({\n  type: actionTypes.SET_PAGE_COUNT,\n  payload:pageCount\n});","import { actionTypes } from \"./action-types\";\nimport { bookType } from \"./bookActions\";\n\nexport const favoritesLoaded = (books: bookType[]) => ({\n  type: actionTypes.FAVORITES_LOADED,\n  payload: books\n});","import { bookDetailsType, bookPageLoaded, booksLoaded } from '../actions/bookActions';\nimport { bookType } from '../actions/bookActions';\nimport { favoritesLoaded } from '../actions/favoritesActions';\nimport { setPageCount } from '../actions/pageActions';\nimport { socket } from '../components/navbar/UserIcon';\nimport { store } from '../index';\nimport axios from './axios';\n\ninterface getAllBooksType {\n  authors?: string[];\n  price?: string;\n};\n\ninterface BookListType {\ncount: number;\nrows: bookType[];\n}\n\nexport const getAllBooks = async (data?: getAllBooksType) => {\n  const { sortTarget, direction } = store.getState().sort;\n  const { page } = store.getState().page;\n  const { gener } = store.getState().filter;\n  const { price } = store.getState().filter;\n  const { rating } = store.getState().filter;\n  const { authors } = store.getState().filter;\nconst bookList: BookListType = await axios.get('/books', { params: {...data, sortTarget, direction, page, gener, price, rating, authors}  });\nstore.dispatch(booksLoaded(bookList.rows))\nstore.dispatch(setPageCount(bookList.count));\nreturn bookList;\n};\n\nexport const getBook = async (id: number) => {\n  const bookDetails: bookDetailsType = await axios.get(`/books/:${id}`);\n  store.dispatch(bookPageLoaded(bookDetails))\n};\n\nexport const setBookDescription = async (id: number, description: string) => {\n  const data: string = await axios.patch(`/books/:${id}`, { description });\n  return data;\n};\n\nexport const addNewBook = async (formData: FormData) => {\n  const res = await axios(\"/books\", {\n    method: \"post\",\n    data: formData,\n    headers: {\n      \"content-type\": \"multipart/form-data\",\n    },\n  });\n  return res;\n};\n\nexport const handleFavorites = async (bookId: number, type: string) => {\n  if (type === 'add') {\n    const books: bookType[] = await axios.post('/favorites', { bookId, type });\n    store.dispatch(favoritesLoaded(books));\n  }\n  if (type === 'del') {\n    const books: bookType[] = await axios.delete('/favorites', { params: { bookId, type } })\n    store.dispatch(favoritesLoaded(books));\n  }\n  const id = store.getState().auth.id;\n  socket.emit('bookCreated', {'userId': `${id}`});\n};\n\nexport const getFavorites = async () => {\n  const favoriteBooks: bookType[] = await axios.get('/favorites');\n  store.dispatch(favoritesLoaded(favoriteBooks));\n};\n\ninterface dataType {\n  authors: [{name: string}];\n  geners: [{name: string}];\n  priceRange: number[];\n}\n\ninterface GetDataType {\n  authors?: boolean;\n  geners?: boolean;\n  price?: boolean;\n};\n\n/** \n  * @param {object} params.authors - \n  * @param {boolean} params.geners - optional\n  * @param {boolean} params.price - optional\n  * @returns {object} {[authors], [geners], [priceRange]} \n  */\nexport const getData = async (params: GetDataType) => {\n  const data: dataType = await axios.get('/data', { params: {...params} });\n  return data;\n};","import { actionTypes } from './action-types'\n\nexport interface bookType {\n  id: number;\n  bookIcon: string;\n  writer: { name: string };\n  name: string;\n  description: string;\n  rating: number;\n  price: number;\n  userId: number;\n  user: [{id: number}];\n}\n\nexport interface bookImageType {\n  id: number,\n  url: string,\n  bookId: number\n}\n\nexport interface bookDetailsType {\n  book: bookType,\n  bookImages: bookImageType[]\n}\n\nexport const booksLoaded = (books: bookType[]) => ({\n  type: actionTypes.BOOKS_LIST_SUCCESS,\n  payload: books\n});\n\nexport const bookPageLoaded = (bookDedails: bookDetailsType) => ({\n  type: actionTypes.BOOK_DETAILS_SUCCESS,\n  payload: bookDedails\n});\n\nexport const bookImagesLoaded = (bookImages: bookImageType[]) => ({\n  type: actionTypes.BOOK_IMAGES_LOADED,\n  payload: bookImages\n});","import { actionTypes } from \"./action-types\";\n\nexport const authorsLoaded = (authors: [{name: string}]) => ({\n  type: actionTypes.AUTHOR_LIST_LOADED,\n  payload: authors.map((author: {name: string}) => author.name)\n});","import { actionTypes } from \"./action-types\";\n\nexport const handleAuthors = (authors: string[]) => ({\n  type: actionTypes.SET_AUTHORS,\n  authors\n});\n\nexport const handlePrice = (price: string) => ({\n  type: actionTypes.SET_PRICE,\n  price\n});\n\nexport const handleRating = (rating: number | null) => ({\n  type: actionTypes.SET_RATING,\n  rating\n});\n\nexport const handleGener = (gener: string) => ({\n  type: actionTypes.SET_GENER,\n  gener\n});\n","import React, { useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authorsLoaded } from \"../../actions/authorActions\";\nimport { handleAuthors } from \"../../actions/filterActions\";\nimport { getData } from \"../../api/bookApi\";\nimport { RootState } from \"../../reducers\";\n\nconst Authors = () => {\n  const dispatch = useDispatch();\n  const { authors, selectedAuthors } = useSelector((state: RootState) => ({\n    authors: state.authors,\n    selectedAuthors: state.filter.authors\n  }));\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.id;\n    const checked = e.target.checked;\n    if (checked && selectedAuthors) {\n        dispatch(handleAuthors([...selectedAuthors, value]))\n    } else if (selectedAuthors){\n        dispatch(handleAuthors(selectedAuthors.filter((author: string) => author !== value)))\n    }\n  };\n\n  useEffect(() => {\n    const loadAuthors = async () => {\n      const data = await getData({authors: true});\n      dispatch(authorsLoaded(data.authors));\n    };\n    loadAuthors()\n  }, [dispatch]);\n  \n  return (\n    <Form className=\"mb-2\">\n      <strong>Authors</strong>\n      {authors && authors.map((author: string) => (\n        <Form.Check\n          onChange={handleChange}\n          className=\"ml-1\"\n          key={author}\n          type=\"checkbox\"\n          id={author}\n          label={author}\n        />\n      ))}\n    </Form>\n  );\n};\nexport default Authors;\n","import { actionTypes } from \"./action-types\";\n\nexport const genersLoaded = (geners: [{name: string}]) => ({\n  type: actionTypes.GENER_LIST_LOADED,\n  payload: geners.map((gener: {name: string}) => gener.name)\n});","import React, { useEffect } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handleGener } from \"../../actions/filterActions\";\nimport { genersLoaded } from \"../../actions/generActions\";\nimport { setPage } from \"../../actions/pageActions\";\nimport { getAllBooks, getData } from '../../api/bookApi';\nimport { RootState } from \"../../reducers\";\n\nconst Geners = () => {\n  const dispatch = useDispatch()\n  const { geners, currentGener } = useSelector((state: RootState) => ({\n    geners: state.geners,\n    currentGener: state.filter.gener\n  }));\n  const handleClick = (e: React.FocusEvent<HTMLAnchorElement>) => {\n    const gener = e.target.innerText;\n    dispatch(setPage(1));\n    dispatch(handleGener(gener));\n    getAllBooks();\n  };\n  useEffect(() => {\n    const loadGeners = async () => {\n      const data = await getData({geners: true});\n      dispatch(genersLoaded(data.geners));\n    };\n    loadGeners()\n  }, [dispatch]);\n\n  return (\n    <div className=\"mb-2\">\n      <strong>Genres</strong>\n      <div>\n        {geners.map((generName: string) => {\n          const selected = generName === currentGener ? `text-info selected` : '';\n          return (\n            <Nav.Link onFocus={handleClick} key={generName} className={`ml-1 p-0 gen-item ${selected}`}>\n              {generName}\n            </Nav.Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default Geners;\n","import { actionTypes } from './action-types';\n\nexport const priceLoaded = (priceRange: number[]) => ({\n  type: actionTypes.PRICE_RANGE_LOADED,\n  payload: priceRange\n});","import React, { useEffect } from \"react\";\nimport { Row, Col, Badge, Container } from \"react-bootstrap\";\nimport Nouislider from \"nouislider-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handlePrice } from \"../../actions/filterActions\";\nimport { RootState } from \"../../reducers\";\nimport { priceLoaded } from \"../../actions/priceActions\";\nimport { getData } from \"../../api/bookApi\";\n\nconst Price = () => {\n  const dispatch = useDispatch();\n\n  const { price, priceRange } = useSelector((state: RootState) => ({\n    price: state.filter.price,\n    priceRange: state.price,\n  }));\n\n  const [min, max] = priceRange;\n  const [minPrice = \"\", maxPrice = \"\"] = price.split(\",\");\n\n  const handleSlider = (...args: any) => {\n    const [ value ] = args;\n    const [ min, max ] = value;\n    const minPrice = Math.floor(min);\n    const maxPrice = Math.floor(max);\n    dispatch(handlePrice(`${minPrice},${maxPrice}`));\n  };\n\n  useEffect(() => {\n    const loadPriceRange = async () => {\n      const data = await getData({price: true});\n      dispatch(priceLoaded(data.priceRange));\n    };\n    loadPriceRange()\n  }, [dispatch]);\n\n  return (\n    <Container className=\"pl-0 ml-2\" style={{maxWidth: '200px'}}>\n      <strong>Price</strong>\n      <Nouislider\n        className=\"my-3 mx-0\"\n        range={{ min: min, max: max }}\n        start={[min, max]}\n        onUpdate={handleSlider}\n        connect\n      />\n      <Row>\n        <Col>\n        <Badge variant=\"light border border-info py-2 px-3\">\n          {Math.floor(+minPrice / 100)}\n        </Badge>\n        </Col>\n        <Col>\n        <Badge variant=\"light border border-info py-2 px-3\">\n          {Math.ceil(+maxPrice / 100)}\n        </Badge>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Price;","import React from \"react\";\nimport { Button, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handleRating } from '../../actions/filterActions';\nimport { RootState } from \"../../reducers\";\n\nconst RatingForm = () => {\n  const dispatch = useDispatch();\n  const { rating } = useSelector((state: RootState) => ({\n    rating: state.filter.rating\n  }))\n\n  const stars = Array.from(Array(5).keys());\n  \n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    const value = +e.currentTarget.id;\n    // alert(`value - ${value}, rating - ${rating}`)\n    if (value === rating) {\n      dispatch(handleRating(null));\n      return;\n    }\n    dispatch(handleRating(value));\n  };\n  return (\n    <div>\n      <strong>Rating</strong>\n      <Row className=\"mt-1 ml-1\">\n        {stars.map((item) => {\n          let starType: string;\n          if (rating) {\n            starType = item+1 <= rating ? '' : '-o';\n          } else {\n            starType = '-o';\n          }\n          return (\n            <div key={item + \"q\"}>\n              <Button\n                onClick={handleClick}\n                id={(1+item).toString()}\n                variant=\"outline-warning btn-tog btn-bdnone star-rat mb-2\"\n                size=\"sm\"\n              >\n                <i className={`fa fa-star${starType} fa-lg`} aria-hidden=\"true\" />\n              </Button>\n            </div>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\nexport default RatingForm;\n","import React from \"react\";\nimport { Col, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { setPage } from \"../../actions/pageActions\";\nimport { hideSidebar } from \"../../actions/sidebarActions\";\nimport { getAllBooks } from \"../../api/bookApi\";\nimport Authors from \"./Authors\";\nimport Geners from \"./Geners\";\nimport Price from \"./Price\";\nimport RatingForm from \"./Rating\";\n\nconst FilterPanel = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = () => {\n    dispatch(setPage(1));\n    dispatch(hideSidebar);\n    getAllBooks();\n  };\n\n  return (\n    <Col style={{maxWidth: '200px'}} className='mb-2'>\n      <Geners />\n      <RatingForm />\n      <Authors />\n      <Price />\n      <Button onClick={handleFilter} variant=\"outline-info mt-4\" size=\"sm\">\n        <span>show books</span>\n        <i className=\"fa fa-filter ml-2\" aria-hidden=\"true\" />\n      </Button>\n    </Col>\n  );\n};\n\nexport default FilterPanel;\n","import { actionTypes } from \"./action-types\";\n\nexport interface SortType {\n  type: string;\n  payload: string;\n}\n\nexport const setSortTarget = (target: string): SortType => ({\n  type: actionTypes.SET_SORT_TARGET,\n  payload: target\n});\n\n\n\nexport const setSortDirection = (direction: string): SortType => ({\n  type: actionTypes.SET_SORT_DIRECTION,\n  payload: direction\n});","import React from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownButton,\n  Row,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSortDirection, setSortTarget } from \"../../actions/sortActions\";\nimport { getAllBooks } from \"../../api/bookApi\";\nimport { RootState } from \"../../reducers\";\n\nconst SortForm = () => {\n  const dispatch = useDispatch();\n  const { sortDirection, sortTarget } = useSelector((state: RootState) => ({\n    sortDirection: state.sort.direction,\n    sortTarget: state.sort.sortTarget\n  }));\n\n  const handleSort = async (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const value = e.currentTarget.innerText;\n    dispatch(setSortTarget(value.toLowerCase()));\n    getAllBooks();\n  };\n  const handleDirection = async () => {\n    sortDirection === \"ASC\" ? dispatch(setSortDirection('DESC')) : dispatch(setSortDirection(\"ASC\"));\n    getAllBooks();\n  };\n\n  return (\n    <Row className=\"justify-content-end mr-3 pb-2\">\n      <ButtonGroup>\n        <Button\n          onClick={handleDirection}\n          variant=\"outline-info\"\n          size=\"sm\"\n        >\n          <i className={`fa fa-sort-amount-${sortDirection.toLowerCase()}`} aria-hidden=\"true\" />\n        </Button>\n\n        <DropdownButton\n          variant=\"outline-info\"\n          as={ButtonGroup}\n          title={sortTarget.charAt(0).toUpperCase() + sortTarget.slice(1)}\n          id=\"bg-nested-dropdown\"\n          size=\"sm\"\n        >\n          <Dropdown.Item onClick={handleSort} eventKey=\"1\">\n            Name\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleSort} eventKey=\"2\">\n            Price\n          </Dropdown.Item>\n          <Dropdown.Item onClick={handleSort} eventKey=\"2\">\n            Rating\n          </Dropdown.Item>\n        </DropdownButton>\n      </ButtonGroup>\n    </Row>\n  );\n};\n\nexport default SortForm;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPage } from \"../../actions/pageActions\";\nimport { getAllBooks } from \"../../api/bookApi\";\nimport { RootState } from \"../../reducers\";\n\nconst PaginationForm = () => {\n  const dispatch = useDispatch();\n  const { page, pageCount } = useSelector((state: RootState) => ({\n    page: state.page.page,\n    pageCount: state.page.pageCount\n  }));\n  const handleFocus = (e: React.FocusEvent<HTMLElement>) => {\n    const pageNumber = +e.target.innerText;\n    dispatch(setPage(+pageNumber));\n    getAllBooks();\n  };\n\n  const pages = Math.ceil(pageCount/3)\n\n  return (\n    <Pagination size=\"sm\">\n      <Pagination.Prev />\n      {Array.from(Array(pages).keys()).map((item: number) => (\n        <Pagination.Item\n          key={item + \"t\"}\n          active={item+1 === page}\n          onFocus={handleFocus}\n        >\n          {item + 1}\n        </Pagination.Item>\n      ))}\n      <Pagination.Next />\n    </Pagination>\n  );\n};\nexport default PaginationForm;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\nimport { handleFavorites } from \"../../api/bookApi\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../reducers\";\nimport { bookType } from \"../../actions/bookActions\";\n\ninterface CardFooterProps {\n  rating: number;\n  id: number;\n}\n\nconst CardFooter = ({ rating, id }: CardFooterProps) => {\n\n  const { isAuth, favorites } = useSelector((state: RootState) => ({\n    isAuth: state.auth.isLoggedIn,\n    favorites: state.favorites\n  }));\n\n  const [fav, setFav] = useState(false);\n  \n  const addFavorites = async () => {\n    if (fav) {\n      await handleFavorites(id, 'del');\n      setFav(false);\n    }\n    if (!fav) {\n      await handleFavorites(id, 'add');\n      setFav(true);\n    } \n  };\n\n  useEffect(() => {\n      const fav = !favorites.every((book: bookType) => book.id !== id);\n      setFav(fav);\n  },[fav, favorites, id]);\n\n  return (\n    <Card.Footer className=\"p-1\">\n      <div className=\"mt-2 ml-2 float-left\">\n        {Array.from(Array(5).keys()).map((item) => {\n          const idx = +item < rating ? '' : '-o';\n          return (\n          <div key={item + \"a\"} className=\"text-warning float-left mx-1\">\n            <i className={`fa fa-star${idx}`} aria-hidden=\"true\" />\n          </div>)\n          }\n        )}\n      </div>\n      {/* <OverlayTrigger\n        overlay={<Tooltip id=\"tooltip-disabled\">Add to cart</Tooltip>}\n      >\n        <Button variant=\"outline-info float-right btn-tog btn-bdnone m-0\">\n          <i className=\"fa fa-shopping-bag\" aria-hidden=\"true\" />\n        </Button>\n      </OverlayTrigger> */}\n     {isAuth && <OverlayTrigger\n        overlay={<Tooltip id=\"tooltip-disabled\">Add to favorites</Tooltip>}\n      >\n        <Button onClick={addFavorites} variant=\"outline-danger float-right btn-tog btn-bdnone m-0\">\n          <i className={`fa fa-heart${fav ? '' : '-o'}`} aria-hidden=\"true\" />\n        </Button>\n      </OverlayTrigger>}\n    </Card.Footer>\n  );\n};\nexport default CardFooter;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport CardFooter from './CardFooter';\nimport { Link } from \"react-router-dom\";\nimport { bookType } from \"../../actions/bookActions\";\n\ninterface bookCardProps {\n  book: bookType\n}\nconst BookCard = ({ book }: bookCardProps) => {\n\n  const loadBookPage = () => {\n    localStorage.setItem('bookId', book.id.toString())\n  }\n  const bookIcon = book.bookIcon ? book.bookIcon : 'https://www.transparentpng.com/thumb/book/dvATkC-download-book.png';\n  return (\n    <Card\n      style={{ minWidth: \"14rem\", maxWidth: \"16rem\", marginBottom: \"20px\" }}\n    >\n      <Card.Header className=\"clip\">\n        <strong>{book.name}</strong>\n      </Card.Header>\n      <Link\n        to=\"/book\"\n        onClick={loadBookPage}\n        style={{ textDecoration: \"none\" }}\n      >\n        <Card.Img variant=\"top\" className=\"p-3 mx-auto d-block\" src={bookIcon} style={{maxHeight: '15rem', width: 'auto'}} />\n        <Card.Body className=\"bk-card pt-0\">\n          <Card.Text>\n            {book.writer.name}\n            <strong className=\"float-right text-info\">{`$ ${(book.price / 100).toFixed(2)}`}</strong>\n          </Card.Text>\n        </Card.Body>\n      </Link>\n      <CardFooter rating={book.rating} id={book.id}  />\n    </Card>\n  );\n};\n\n\nexport default BookCard;\n","import * as React from \"react\";\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"loadingio-spinner-ripple-qd9ydsvk7xs mx-auto\">\n      <div className=\"ldio-x7k2cpkocqc\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\nexport default Spinner;","import React, { useEffect } from \"react\";\nimport { Row, Col, CardGroup } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport PaginationForm from \"./PaginationForm\";\nimport BookCard from \"./BookCard\";\nimport { getAllBooks } from \"../../api/bookApi\";\nimport Spinner from \"../spinner/Spinner\";\nimport { getFavorites } from \"../../api/bookApi\";\nimport { RootState } from \"../../reducers\";\nimport { bookType } from \"../../actions/bookActions\";\n\nconst BookList = () => {\n  const { books, loading, isAuth } = useSelector((state: RootState) => ({\n    books: state.bookList.books,\n    loading: state.bookList.loading,\n    isAuth: state.auth.isLoggedIn\n  }));\n\n  useEffect(() => {\n    getAllBooks();\n    if (isAuth) getFavorites();\n  },[isAuth]);\n  return (\n    <Col>\n      <CardGroup>\n        {loading ? (\n          <Spinner />\n        ) : (\n          books.map((item: bookType) => (\n            <Col key={item.id}>\n              <BookCard book={item} />\n            </Col>\n          ))\n        )}\n      </CardGroup>\n      <Row className=\"justify-content-center\">\n        <PaginationForm />\n      </Row>\n    </Col>\n  );\n};\n\nexport default BookList;\n","import { Modal, Navbar } from \"react-bootstrap\";\nimport React from \"react\";\nimport \"./sidebar.css\";\n\ninterface SideBarType {\n  isVisible: boolean;\n  onHide: VoidFunction;\n  children: JSX.Element[] | JSX.Element;\n}\n/**\n * \n * @param isVisible boolean\n * @param onHide toggle isVisibility function\n * @param children props.children\n */\nconst Sidebar = (props: SideBarType) => {\n    return (\n        <Modal id=\"sidebar\" show={props.isVisible} onHide={props.onHide} >\n          <Modal.Header style={{border: 'none'}} closeButton>\n          <Navbar.Brand href=\"/\" className=\"align-middle\"><strong className='text-danger'>bookSTORE</strong></Navbar.Brand>\n          </Modal.Header>\n            {props.children}\n        </Modal>\n    );\n};\nexport default Sidebar;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport FilterPanel from \"../filter-panel/FilterPanel\";\nimport SortForm from \"../sort-form/SortForrm\";\nimport BookList from \"../book-list/BookList\";\nimport Sidebar from \"../../components/sidebar/SideBar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../reducers\";\nimport { hideSidebar } from \"../../actions/sidebarActions\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const { isSidebarVisible, viewportWidth } = useSelector((state: RootState) => ({\n    isSidebarVisible: state.sidebar,\n    viewportWidth: state.viewport\n  }));\n\n  return (\n    <Container>\n      <SortForm />\n      <Row>\n        {viewportWidth > 768 ? (\n          <FilterPanel />\n        ) : (\n          <Sidebar\n            isVisible={isSidebarVisible}\n            onHide={() => dispatch(hideSidebar)}\n          >\n            <FilterPanel />\n          </Sidebar>\n        )}\n        <BookList />\n      </Row>\n    </Container>\n  );\n};\nexport default Main;\n","import { store } from '..';\nimport { changeUserImg, userType } from '../actions/authActions';\nimport { bookImagesLoaded, bookImageType } from '../actions/bookActions';\nimport axios from './axios';\n\nexport const addUserAvatar = async (formData: FormData) => {\n  const user: userType = await axios.post(\"/upload/userimg\", formData, {\n    headers: {\n      \"content-type\": \"multipart/form-data\",\n    },\n  });\n  store.dispatch(changeUserImg(user))\n};\n\nexport const addBookImage = async (formData: FormData) => {\n  const images: bookImageType[] = await axios.post(\"/upload/image\", formData,{\n    headers: {\n      \"content-type\": \"multipart/form-data\",\n    },\n  });\n  store.dispatch(bookImagesLoaded(images))\n};","import React, { useState } from 'react';\nimport { Card, Form, Button, Figure } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { addUserAvatar } from \"../../../api/uploadApi\";\nimport { RootState } from '../../../reducers';\n\n\nconst UserCard = () => {\n  const [isFormEmpty, setForm] = useState(true);\n  const { userName, iconUrl } = useSelector((state: RootState) => ({\n    userName: state.auth.name,\n    iconUrl: state.auth.userImg\n  }));\n  const [file, setFile] = useState<string | Blob>('');\n  const formData = new FormData();\n  \n  const submitUserImg = async (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    e.preventDefault();\n    formData.append(\"filedata\", file);\n    addUserAvatar(formData);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.currentTarget.files![0];\n    setFile(file);\n    if (file) {\n      setForm(false)\n    } else {\n      setForm(true)\n    };\n  };\n  return (\n    <Card style={{ maxWidth: \"15rem\" }}>\n          <Card.Header style={{ height: \"3.4rem\" }}>My profile</Card.Header>\n          <Figure className=\"text-center mt-3\">\n            <Figure.Image\n              width={200}\n              height={200}\n              alt=\"171x180\"\n              src={iconUrl}\n              // roundedCircle\n            />\n          </Figure>\n          <Card.Body>\n            <Card.Title>{userName}</Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.File\n                  onChange={handleChange}\n                  id=\"exampleFormControlFile1\"\n                  // label=\"Example file input\"\n                />\n                <Button\n                  variant=\"outline-primary\"\n                  className=\"mt-2\"\n                  as=\"input\"\n                  onClick={submitUserImg}\n                  type=\"submit\"\n                  value=\"Load\"\n                  size=\"sm\"\n                  disabled={isFormEmpty}\n                />\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n  );\n};\nexport default UserCard;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { addNewBook, getData } from \"../../../../api/bookApi\";\nimport { RootState } from \"../../../../reducers\";\nimport { authorsLoaded } from \"../../../../actions/authorActions\";\nimport { genersLoaded } from \"../../../../actions/generActions\";\n\ninterface Astate {\n  name: string;\n  author: string;\n  gener: string;\n  price: string;\n  description: string;\n  bookImage: string | Blob;\n  isSendPossible: boolean;\n}\ninterface Aprops {\n  geners: string[];\n  authors: string[];\n  setAuthors: Function;\n  setGeners: Function;\n}\n\nclass AddBookTab extends Component<Aprops, Astate> {\n  constructor(props: Aprops) {\n    super(props);\n    this.state = this.initialState;\n  }\n  initialState = {\n    name: \"\",\n    author: \"\",\n    gener: \"\",\n    price: \"\",\n    description: \"\",\n    bookImage: \"\",\n    isSendPossible: false,\n  };\n\n  checkForm = (state: Astate) => {\n    for (let key in state) {\n      if (key === \"isSendPossible\") continue;\n      if (!key) return false;\n    }\n    return true;\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    console.log(value);\n    \n    const key = e.target.name;\n    this.setState({ [key]: value } as any);\n    this.setState((state) => ({ isSendPossible: this.checkForm(state) }));\n  };\n  handleFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    this.setState({ bookImage: e.target.files![0] });\n  };\n  createBook = async (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    e.preventDefault();\n    if (!this.state.isSendPossible) return;\n    const formData = new FormData();\n    formData.append(\"bookImg\", this.state.bookImage);\n    formData.append(\"name\", this.state.name);\n    formData.append(\"author\", this.state.author);\n    formData.append(\"gener\", this.state.gener);\n    formData.append(\"price\", this.state.price);\n    formData.append(\"description\", this.state.description);\n    await addNewBook(formData);\n    this.setState({ ...this.initialState });\n  };\n\n  async componentDidMount() {\n    const data = await getData({authors: true, geners: true});\n    this.props.setAuthors(data.authors);\n    this.props.setGeners(data.geners);\n\n  }\n\n  render() {\n    return (\n      <Form className=\"mt-4\">\n        <Form.Group>\n          <Form.Label>Book title</Form.Label>\n          <Form.Control\n            name=\"name\"\n            onChange={this.handleChange}\n            placeholder=\"Book Title\"\n            value={this.state.name}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Book author</Form.Label>\n          <Form.Control name=\"author\" onChange={this.handleChange} as=\"select\" defaultValue=\"Please choose author\">\n          <option disabled hidden>Please choose author</option>\n            {this.props.authors.map((author: string) => (\n              <option key={author}>{author}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Book gener</Form.Label>\n          <Form.Control as=\"select\" name=\"gener\" onChange={this.handleChange} defaultValue='Please choose gener'>\n          <option disabled hidden>Please choose gener</option>\n            {this.props.geners.map((gener: string) => (\n              <option key={gener}>{gener}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Book price</Form.Label>\n          <Form.Control\n            name=\"price\"\n            onChange={this.handleChange}\n            placeholder=\"Book price\"\n            value={this.state.price}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.File\n            onChange={this.handleFile}\n            id=\"exampleFormControlFile1\"\n            label=\"Choose book image\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Book description</Form.Label>\n          <Form.Control\n            name=\"description\"\n            onChange={this.handleChange}\n            as=\"textarea\"\n            rows={3}\n            value={this.state.description}\n          />\n        </Form.Group>\n        <Button\n          onClick={this.createBook}\n          type=\"submit\"\n          variant=\"outline-primary\"\n          className=\"float-right\"\n          disabled={!this.state.isSendPossible}\n        >\n          <span>\n            <span>Add Book</span>\n            <i className=\"fa fa-book fa-lg ml-2\" aria-hidden=\"true\" />\n          </span>\n        </Button>\n      </Form>\n    );\n  }\n}\nconst mstp = (state: RootState) => ({\n  geners: state.geners,\n  authors: state.authors,\n});\n\nconst mdtp = {\n  setAuthors: (authors: [{name: string}]) => authorsLoaded(authors),\n  setGeners: (geners: [{name: string}]) => genersLoaded(geners)\n};\n\nexport default connect(mstp, mdtp)(AddBookTab);\n","import React, { useEffect } from \"react\";\nimport { Button, Image, ListGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { bookType } from '../../../../actions/bookActions';\nimport { getFavorites, handleFavorites } from \"../../../../api/bookApi\";\nimport { RootState } from \"../../../../reducers\";\n\nconst FavoreteBooksTab = () => {\n  const { books } = useSelector((state: RootState) => ({\n    books: state.favorites,\n  }));\n\n  const loadBookPage = (id: number) => {\n    localStorage.setItem('bookId', id.toString())\n  };\n\n  const delFavorites = async (id: number) => {\n    handleFavorites(id, 'del');\n  };\n\n  useEffect(() => {\n    getFavorites();\n  },[]);\n\n  return (\n    <ListGroup>\n      {books.map((book: bookType) => {\n        return (\n          <ListGroup.Item key={book.id}>\n           <Link \n            to='/book' \n            onClick={() => loadBookPage(book.id)}\n            style={{ textDecoration: \"none\" }}>\n              <Image\n                style={{ maxHeight: \"30px\", width: \"auto\" }}\n                src={book.bookIcon}\n                rounded\n              />\n              <span className=\"ml-2\">{book.name}</span>\n           </Link>\n            <Button onClick={() => delFavorites(book.id)} variant='outline-danger float-right ' size=\"sm\">\n            <i className={`fa fa-trash-o fa-lg`} aria-hidden=\"true\" />\n            </Button>\n            <span className=\"mx-4 float-right\">\n              {Array.from(Array(5).keys()).map((item) => {\n                const idx = +item < book.rating ? \"\" : \"-o\";\n                return (\n                    <i key={item + 'y'} className={`fa fa-star${idx} text-warning`} aria-hidden=\"true\" />\n                );\n              })}\n            </span>\n          </ListGroup.Item>\n        );\n      })}\n    </ListGroup>\n  );\n};\nexport default FavoreteBooksTab;\n","import React, { useState } from 'react';\nimport { Card, Nav } from 'react-bootstrap';\nimport AddBookTab from \"./profile-tabs/AddBookTab\";\nimport FavoreteBooksTab from './profile-tabs/FavoriteBooksTab';\n\nconst UserTabs  = () => {\n  const [link, setLink] = useState('Add book');\n  const handleTab = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    const currentLink = e.currentTarget.innerText;\n    setLink(currentLink);\n  };\n  return (\n    <Card>\n    <Card.Header>\n      <Nav variant=\"tabs\">\n        <Nav.Item>\n          <Nav.Link onClick={handleTab}>Add book</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link onClick={handleTab}>Favorite books</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Card.Header>\n    <Card.Body>\n      <Card.Title>{link}</Card.Title>\n      {link === 'Add book' && <AddBookTab />}\n      {link === 'Favorite books' && <FavoreteBooksTab />}\n    </Card.Body>\n  </Card>\n  );\n};\nexport default UserTabs;","import React from \"react\";\nimport { Container, CardGroup } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hideSidebar } from \"../../../actions/sidebarActions\";\nimport { RootState } from \"../../../reducers\";\nimport Sidebar from \"../../sidebar/SideBar\";\nimport UserCard from \"./UserCard\";\nimport UserTabs from \"./UserTabs\";\n\nconst UserPage = () => {\n  const dispatch = useDispatch()\n  const { isSidebarVisible, viewportWidth } = useSelector((state: RootState) => ({\n    isSidebarVisible: state.sidebar,\n    viewportWidth: state.viewport\n  }));\n  return (\n    <Container>\n      <CardGroup className=\"mt-4\">\n      {viewportWidth > 768 ? (\n            <UserCard />\n        ) : (\n          <Sidebar\n            isVisible={isSidebarVisible}\n            onHide={() => dispatch(hideSidebar)}\n          > \n            <UserCard />\n          </Sidebar>\n        )}\n        <UserTabs />\n      </CardGroup>\n    </Container>\n  );\n};\n\nexport default UserPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport { setBookDescription } from \"../../../api/bookApi\";\n\ninterface Dprops {\n  bookId: number\n  description: string;\n  isShow: boolean;\n}\nconst DescriptionForm = ({bookId, description, isShow }: Dprops) => {\n  const [isFormShow, setFormShow] = useState(false);\n  const [descriptionText, setDescriptionText] = useState('');\n  useEffect(() => {\n    setDescriptionText(description)\n  },[description]);\n\n  const textAreaHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDescriptionText(e.target.value);\n  };\n  const toggleForm = () => {\n    setFormShow(true);\n  };\n  const submitForm = async () => {\n    const data = await setBookDescription(bookId, descriptionText);\n    setDescriptionText(data);\n    setFormShow(false);\n  };\n  let handleForm = isFormShow ? submitForm : toggleForm;\n  return (\n    <div className='my-4'>\n      {isFormShow ? (\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Control\n              onChange={textAreaHandleChange}\n              as=\"textarea\"\n              rows={3}\n              value={descriptionText}\n            />\n          </Form.Group>\n          <Button\n            onClick={() => {\n              setFormShow(false);\n              setDescriptionText(description);\n              return;\n            }}\n            variant=\"outline-danger\"\n            size=\"sm\"\n            className=\"float-right\"\n          >\n            <span>\n              Cancel\n              <i className=\"fa fa-ban fa-lg ml-2\" aria-hidden=\"true\" />\n            </span>\n          </Button>\n        </Form>\n      ) : (\n        <Card.Text>{descriptionText}</Card.Text>\n      )}\n      {isShow && (\n        <Button onClick={handleForm} variant=\"outline-info mb-4\" size=\"sm\">\n          <span>\n            Edit description\n            <i\n              className=\"fa fa-pencil-square-o fa-lg ml-2\"\n              aria-hidden=\"true\"\n            />\n          </span>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default DescriptionForm;\n","import React, { useState } from \"react\";\nimport { Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { addBookImage } from '../../../api/uploadApi';\n\nconst AddImageForm = ({ bookId }: {bookId: number}) => {\n\n  const formData = new FormData();\n\n  const [ file, setFile ] = useState<string | Blob>('');\n  const [ label, setLabel ] = useState('Choose file...');\n  const fileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.currentTarget.files![0];\n    setFile(file);\n    setLabel(file.name);\n  };\n  const submitForm = async () => {\n    if (file) {\n      formData.append(\"bookImage\", file);\n      formData.append('bookId', bookId.toString())\n      addBookImage(formData);\n      setFile('');\n    }\n  };\n  return (\n    <DropdownButton\n      className=\"float-right\"\n      menuAlign=\"right\"\n      title={\n        <span>\n          Upload new image\n          <i className=\"fa fa-picture-o fa-lg ml-2\" aria-hidden=\"true\" />\n        </span>\n      }\n      id=\"dropdown-menu-align-right\"\n      variant=\"outline-info\"\n      size=\"sm\"\n    >\n      <Dropdown.ItemText>\n        <div\n          className=\"input-group m-1 border border-info rounded\"\n          style={{ minWidth: \"400px\" }}\n        >\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              onChange={fileChange}\n              className=\"custom-file-input\"\n              id=\"inputGroupFile04\"\n              aria-describedby=\"inputGroupFileAddon04\"\n            />\n            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile04\">\n              {label}\n            </label>\n          </div>\n          <div className=\"input-group-append\">\n            <Button\n              className=\"float-right\"\n              onClick={submitForm}\n              variant=\"outline-info\"\n              size=\"sm\"\n            >\n              Upload\n            </Button>\n          </div>\n        </div>\n      </Dropdown.ItemText>\n    </DropdownButton>\n  );\n};\nexport default AddImageForm;\n","import { actionTypes } from \"./action-types\";\n\nexport interface reviewType {\n  comment: string;\n  grade: number;\n  id: number;\n  reviewer: {\n    name: string;\n    id: number;\n  };\n};\n\nexport interface BookReviewsType {\n  bookReviews: reviewType[];\n  reviewerId: number | null;\n}\n\nexport const reviewsLoaded = (bookReviews: BookReviewsType) => ({\n  type: actionTypes.REVIEWS_LOADED,\n  bookReviews\n});","import { store } from '..';\nimport { BookReviewsType, reviewsLoaded } from '../actions/rewiewActions';\nimport axios from './axios';\n\nexport const getReviews = async (bookId: number) => {\n  const reviews: BookReviewsType = await axios.get('/review', { params: { bookId } });\n  store.dispatch(reviewsLoaded(reviews));\n};\n\nexport interface SetReviewType {\n  bookId: number;\n  userId: number;\n  grade: number;\n  comment?: string;\n};\n\nexport const setReview = async (review: SetReviewType) => {\n  const reviews: BookReviewsType = await axios.post('/review', { ...review });\n  store.dispatch(reviewsLoaded(reviews));\n};\n\nexport const patchReview = async (review: SetReviewType) => {\n  const reviews: BookReviewsType = await axios.patch('/review', { ...review });\n  store.dispatch(reviewsLoaded(reviews))\n};\n\nexport const deleteReview = async (review: {userId: number; bookId: number}) => {\n  const reviews: BookReviewsType = await axios.delete('/review', { params:{ ...review }});\n  store.dispatch(reviewsLoaded(reviews))\n}","import React, { useState } from \"react\";\nimport { Form, Button, Row } from \"react-bootstrap\";\nimport { setReview, SetReviewType } from \"../../../api/reviewApi\";\nimport { RootState } from \"../../../reducers\";\nimport { useSelector } from 'react-redux';\n\nconst CommentForm = () => {\n  const { userId, bookId } = useSelector((state: RootState) => ({\n    userId: state.auth.id,\n    bookId: state.bookPage.book.id\n  }))\n  const [isFormShow, setFormShow] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [grade, setGrade] = useState(1);\n  const stars = Array.from(Array(5).keys());\n\n  const textAreaHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setComment(value);\n  };\n\n  const handleClick = (e: React.FocusEvent<HTMLElement>) => {\n    const value = e.target.id;\n    setGrade(+value+1);\n  };\n\n  const toggleForm = () => {\n    setFormShow(true);\n  };\n  const submitForm = async () => {\n    const review: SetReviewType = {\n      userId,\n      bookId,\n      grade,\n      comment\n    };\n    setReview(review);\n    setComment('');\n    setGrade(0);\n    setFormShow(false);\n  };\n  let handleForm = isFormShow ? submitForm : toggleForm;\n\n  return (\n    <div className=\"mt-4\">\n      {isFormShow && (\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Control\n              onChange={textAreaHandleChange}\n              as=\"textarea\"\n              rows={3}\n            />\n          </Form.Group>\n          <div>\n      <strong>Rating</strong>\n      <Row className=\"mt-1 ml-1\">\n        {stars.map((item) => {\n          const starType = item >= grade ? '-o' : '';\n          return (\n            <div key={item + \"q\"}>\n              <Button\n                onFocus={handleClick}\n                id={item.toString()}\n                variant=\"outline-warning btn-tog btn-bdnone star-rat mb-2\"\n                size=\"sm\"\n              >\n                <i className={`fa fa-star${starType} fa-lg`} aria-hidden=\"true\" />\n              </Button>\n            </div>\n          );\n        })}\n      </Row>\n    </div>\n          <Button\n            onClick={() => setFormShow(false)}\n            variant=\"outline-danger float-right ml-3\"\n            size=\"sm\"\n          >\n            <span>\n              Cancel\n              <i className=\"fa fa-ban fa-lg ml-2\" aria-hidden=\"true\" />\n            </span>\n          </Button>\n        </Form>\n      )}\n      <Button onClick={handleForm} variant=\"outline-info mb-3 float-right\" size=\"sm\">\n        <span>\n          Add feedback\n          <i className=\"fa fa-pencil-square-o fa-lg ml-2\" aria-hidden=\"true\" />\n        </span>\n      </Button>\n    </div>\n  );\n};\nexport default CommentForm;\n","import React from \"react\";\nimport { Badge, Nav } from \"react-bootstrap\";\n\ninterface ChangeCommentType {\n  handleChange: VoidFunction;\n  handleDelete: VoidFunction;\n}\n\nconst ChangeComment = ({ handleChange, handleDelete }: ChangeCommentType) => {\n  return (\n    <>\n        <Badge\n        onClick={handleDelete}\n        variant=\"danger float-right mx-1\"\n        >\n        <Nav.Link className=\"p-1 text-light\">\n          <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />\n      </Nav.Link>\n        </Badge>\n        <Badge onClick={handleChange} variant=\"info float-right mx-1\">\n      <Nav.Link className=\"p-1 text-light\">\n          <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n      </Nav.Link>\n        </Badge>\n    </>\n  );\n};\nexport default ChangeComment;\n","import React, { useState } from \"react\";\nimport { Form, Button, Row } from \"react-bootstrap\";\n\ninterface TextFormType {\nsubmitForm: Function;\ntoggleForm: Function;\ninitialValue: string;\ninitialGrade: number;\n};\n\nconst TextForm = ({ submitForm, toggleForm, initialValue, initialGrade }: TextFormType) => {\n\n  const [grade, setGrade] = useState(initialGrade);\n\n  const handleClick = (e: React.FocusEvent<HTMLElement>) => {\n    const value = e.target.id;\n    setGrade(+value+1);\n  };\n\n  const [ formText, setFormText ] = useState(initialValue);\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.currentTarget.value;\n    setFormText(value);\n  };\n\n  const submit = (submitHandler: Function) => {\n    submitHandler(formText, grade);\n  };\n\n  const stars = Array.from(Array(5).keys());\n\n  return (\n    <div className=\"mt-4\">\n        <Form>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Control\n            onChange={handleChange}\n            as=\"textarea\"\n            rows={3}\n            value={formText}\n          />\n        </Form.Group>\n        <Row className=\"mt-1 ml-1 float-left\">\n        {stars.map((item) => {\n          const starType = item >= grade ? '-o' : '';\n          return (\n            <div key={item + \"q\"}>\n              <Button\n                onFocus={handleClick}\n                id={item.toString()}\n                variant=\"outline-warning btn-tog btn-bdnone star-rat mb-2\"\n                size=\"sm\"\n              >\n                <i className={`fa fa-star${starType} fa-lg`} aria-hidden=\"true\" />\n              </Button>\n            </div>\n          );\n        })}\n          </Row>\n        <Button\n          onClick={() => toggleForm(false)}\n          variant=\"outline-danger float-right ml-3\"\n          size=\"sm\"\n          >\n          <span>\n            Cancel\n            <i className=\"fa fa-ban fa-lg ml-2\" aria-hidden=\"true\" />\n          </span>\n        </Button>\n      </Form>\n      <Button\n        onClick={() => submit(submitForm)}\n        variant=\"outline-info mb-3 float-right\"\n        size=\"sm\"\n        >\n        <span>\n          Submit\n          <i className=\"fa fa-pencil-square-o fa-lg ml-2\" aria-hidden=\"true\" />\n        </span>\n      </Button>\n      </div>\n  );\n};\nexport default TextForm;\n","import React, { useState } from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { reviewType } from \"../../../actions/rewiewActions\";\nimport {\n  SetReviewType,\n  patchReview,\n  deleteReview,\n} from \"../../../api/reviewApi\";\nimport { RootState } from \"../../../reducers\";\nimport ChangeComment from \"./ChangeComment\";\nimport TextForm from \"./TextForm\";\n\ninterface CommentItemType {\n  review: reviewType;\n}\n\nconst CommentItem = ({ review }: CommentItemType) => {\n  const [isFormShow, setFormShow] = useState(false);\n\n  const { userId, bookId } = useSelector((state: RootState) => ({\n    bookId: state.bookPage.book.id,\n    userId: state.auth.id,\n  }));\n\n  const handleComment = () => {\n    setFormShow(true);\n  };\n\n  const formHandler = (text: string, grade: number) => {\n    const review: SetReviewType = {\n      userId,\n      bookId,\n      grade,\n      comment: text,\n    };\n    patchReview(review);\n    setFormShow(false);\n  };\n\n  const deleteComment = () => {\n    const review: { userId: number; bookId: number } = {\n      userId,\n      bookId,\n    };\n    deleteReview(review);\n  };\n\n  const isCommentChangeble = userId === review.reviewer.id;\n  return (\n    <>\n      {isFormShow ? (\n        <TextForm\n          submitForm={formHandler}\n          toggleForm={setFormShow}\n          initialValue={review.comment}\n          initialGrade={review.grade}\n        />\n      ) : (\n        <>\n          {isCommentChangeble && (\n            <ChangeComment\n              handleChange={handleComment}\n              handleDelete={deleteComment}\n            />\n          )}\n          <div className=\"float-left\">{review.comment}</div>\n          <div className=\"float-right\">\n            <Badge className=\"align-middle\">{review.reviewer.name}</Badge>\n          </div>\n          <span className=\"mx-4 float-right\">\n            {Array.from(Array(5).keys()).map((item) => {\n              const idx = +item < review.grade ? \"\" : \"-o\";\n              return (\n                <i\n                  key={item + \"y\"}\n                  className={`fa fa-star${idx} text-warning  align-middle`}\n                  aria-hidden=\"true\"\n                />\n              );\n            })}\n          </span>\n        </>\n      )}\n    </>\n  );\n};\nexport default CommentItem;\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { reviewType } from \"../../../actions/rewiewActions\";\nimport { RootState } from \"../../../reducers\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n// import ReplyForm from \"./ReplyForm\";\n\nconst Comment = () => {\n\n  const { reviews, isAuth, userId, reviewUserId } = useSelector((state: RootState) => ({\n    reviews: state.reviews.bookReviews,\n    reviewUserId: state.reviews.reviewerId,\n    isAuth: state.auth.isLoggedIn,\n    userId: state.auth.id\n  }));\n// todo: useEffect if userId recall review route\n\n  const isReviewPossible = (userId !== reviewUserId) && isAuth;\n  return (\n    <>\n      <ListGroup>\n        {isReviewPossible && <CommentForm />}\n        {reviews.map((review: reviewType) => {\n          return (\n            <ListGroup.Item key={review.comment + review.grade}>\n             <CommentItem review={review} />\n              {/* {isAuth && <ReplyForm/>} */}\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </>\n  );\n};\nexport default Comment;\n","import React, { useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination, Controller, Thumbs } from 'swiper';\nimport 'swiper/swiper-bundle.css';\n\nSwiperCore.use([Navigation, Pagination, Controller, Thumbs]);\n\nfunction BookImagesSlider({ images }: {images:string[]}) {\n\n  const [thumbsSwiper, setThumbsSwiper] = useState<any>(null);\n\n    const slides = images.map((image: string, idx: number) => {\n      return (\n      <SwiperSlide key={image+idx} tag=\"li\">\n        <img\n          src={image}\n          style={{ listStyle: 'none', width: '300px', height: '500px' }}\n          alt={`Slide ${idx+1}`}\n        />\n      </SwiperSlide>\n      );\n    }\n    );\n\n  const thumbs = images.map((image: string, idx: number) => (\n      <SwiperSlide key={`thumb-${idx}`} tag=\"li\" style={{ listStyle: 'none' }}>\n        <img\n          style={{ width: '100px', height: '150px' }}\n          src={image}\n          alt={`Thumbnail ${idx+1}`}\n        ></img>\n      </SwiperSlide>\n  )\n    );\n\n  return (\n    <React.Fragment>\n      <Swiper\n        id=\"main\"\n        thumbs={{ swiper: thumbsSwiper }}\n        tag=\"section\"\n        wrapperTag=\"ul\"\n        navigation\n        pagination\n        spaceBetween={0}\n        slidesPerView={1}\n      >\n        {slides}\n      </Swiper>\n \n      <Swiper\n        id=\"thumbs\"\n        spaceBetween={5}\n        slidesPerView={3}\n        onSwiper={setThumbsSwiper}\n      >\n        {thumbs}\n      </Swiper>\n    </React.Fragment>\n  );\n}\n\nexport default BookImagesSlider;","import React, { useEffect } from \"react\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBook } from \"../../../api/bookApi\";\nimport { bookImageType } from \"../../../actions/bookActions\";\nimport DescriptionForm from \"./DescriptionForm\";\nimport AddImageForm from \"./AddImageForm\";\nimport Comment from \"./Comment\";\nimport { getReviews } from \"../../../api/reviewApi\";\nimport { RootState } from \"../../../reducers\";\nimport BookImagesSlider from './BookImagesSlider';\nimport Sidebar from \"../../sidebar/SideBar\";\nimport { hideSidebar } from \"../../../actions/sidebarActions\";\n\nconst BookPage = () => {\n  const dispatch = useDispatch();\n  const { book, bookImages, userId, viewportWidth, isSidebarVisible } = useSelector((state: RootState) => ({\n    book: state.bookPage.book,\n    bookImages: state.bookPage.bookImages,\n    userId: state.auth.id,\n    viewportWidth: state.viewport,\n    isSidebarVisible: state.sidebar\n  }));\n  \n  useEffect(() => {\n    const bookId = +localStorage.getItem(\"bookId\")!;\n      getReviews(bookId);\n      getBook(bookId);\n  }, [userId]);\n\n  const isBookUsers = userId === book.userId;\n\n  const images=[book.bookIcon, ...bookImages.map((img: bookImageType) => img.url)];\n  return (\n    <Container>\n      {viewportWidth < 768 &&\n          <Sidebar\n            isVisible={isSidebarVisible}\n            onHide={() => dispatch(hideSidebar)}\n          > \n          </Sidebar>\n        }\n      <Card>\n        <Card.Header as=\"h5\">\n          {book.writer.name}\n          {isBookUsers && <AddImageForm bookId={book.id} />}\n        </Card.Header>\n        <Container className=\"mt-2 text-center\">\n            <BookImagesSlider images={images} />\n        </Container>\n        <Card.Body>\n          <Card.Title>\n            {book.name}\n            <Button className=\"float-right mt-4\" variant=\"outline-warning\" size=\"sm\">\n              <strong className=\"text-danger\">\n                {`$ ${(book.price / 100).toFixed(2)}`}\n                <i\n                  className=\"fa fa-shopping-cart fa-lg ml-2\"\n                  aria-hidden=\"true\"\n                />\n              </strong>\n            </Button>\n          </Card.Title>\n          <DescriptionForm\n            description={book.description}\n            bookId={book.id}\n            isShow={isBookUsers}\n          />\n          <Comment />\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\nexport default BookPage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Main from \"../main/Main\";\nimport UserPage from \"../pages/user/UserPage\";\nimport BookPage from \"../pages/book-page/BookPage\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../reducers\";\n\nconst Routes = () => {\n  const { isAuth } = useSelector((state: RootState) => ({\n    isAuth: state.auth.isLoggedIn,\n  }));\n  if (isAuth) {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/book\" exact component={BookPage} />\n        <Route path=\"/profile\" exact component={UserPage} />\n      </Switch>\n    );\n  } else {\n    return (\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/book\" exact component={BookPage} />\n      </Switch>\n    );\n  }\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorNotice = () => {\n  return (\n    <Alert variant=\"danger\">\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n        <p>\n          Change this and that and try again. Duis mollis, est non commodo\n          luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\n          Cras mattis consectetur purus sit amet fermentum.\n        </p>\n      </Alert>\n  );\n};\nexport default ErrorNotice;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport NavBar from \"../navbar/NavBar\";\nimport Routes from \"./Routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorNotice from \"../error-notice/ErrorNotice\";\nimport { RootState } from \"../../reducers\";\nimport { setViewportWidth } from '../../actions/viewportActions';\nimport { hideSidebar } from \"../../actions/sidebarActions\";\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleWidth = () => {\n      const viewportWidth =window.innerWidth;\n      if (viewportWidth <= 768) dispatch(hideSidebar)\n      dispatch(setViewportWidth(viewportWidth));\n    };\n\n    window.addEventListener(\"resize\", handleWidth);\n\n    return () => window.removeEventListener(\"resize\", handleWidth);\n  }, [dispatch]);\n\n  const { error } = useSelector((state: RootState) => ({\n    error: state.error\n  }));\n\n  return (\n    <Router>\n      <NavBar />\n      { error ? <ErrorNotice /> : <Routes /> }\n    </Router>\n  );\n};\n\nexport default App;","import { actionTypes } from \"./action-types\";\n\nexport interface ViewportWidthType{\n  type: string;\n  viewportWidth: number\n}\n\nexport const setViewportWidth = (viewportWidth: number): ViewportWidthType => ({\n  type: actionTypes.SET_VIEWPORT_WIDTH,\n  viewportWidth\n});","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { actionTypes } from '../actions/action-types';\nimport { bookDetailsType } from '../actions/bookActions';\nconst initialState: bookDetailsType = {\n  book: {\n    id: 0,\n    bookIcon: '',\n    writer: {name: ''},\n    name: '',\n    description: '',\n    rating: 0,\n    price: 0,\n    userId: 0,\n    user: [{id: 0}]\n  },\n  bookImages: [{\n    id: 0,\n    url: '',\n    bookId: 0\n  }]\n}; \n\ninterface bookPageAction {\n  type: string;\n  payload: bookDetailsType\n}\n\nconst bookPageReducer = (state = initialState, action: bookPageAction): bookDetailsType => {\n  switch (action.type) {\n    case actionTypes.BOOK_DETAILS_SUCCESS:\n      return action.payload;\n    case actionTypes.BOOK_IMAGES_LOADED:\n      return {...state, bookImages: action.payload.bookImages}\n    default:\n      return state;\n  }\n}\nexport default bookPageReducer;\n","import { actionTypes } from \"../actions/action-types\";\n\ninterface generAction {\n  type: string;\n  payload: string[];\n}\n\nconst genersReducer = (state=[''], action: generAction): string[] => {\n  switch (action.type) {\n    case actionTypes.GENER_LIST_LOADED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default genersReducer;","import { actionTypes } from \"../actions/action-types\";\n\ninterface authorAction {\n  type: string;\n  payload: string[];\n}\n\nconst authorsReducer = (state=[''], action: authorAction): string[] => {\n  switch (action.type) {\n    case actionTypes.AUTHOR_LIST_LOADED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default authorsReducer;","import { actionTypes } from '../actions/action-types';\nimport { userType } from '../actions/authActions';\n\nexport interface authType {\n  id: number;\n  name: string;\n  userImg: string;\n  isLoggedIn: boolean;\n}\n\nconst initialState: authType = {\n  id: 0,\n  name: '',\n  userImg: '',\n  isLoggedIn: false\n};\n\ninterface authActionType {\n  type: string;\n  payload: userType;\n};\n\nconst authReducer = (state = initialState, action: authActionType): authType => {\n  switch (action.type) {\n    case actionTypes.SIGN_IN:\n    return {\n        id: action.payload.id,\n        name: action.payload.userName,\n        userImg: action.payload.iconUrl,\n        isLoggedIn: true\n      };\n    case actionTypes.SIGN_OUT:\n      return initialState;\n    case actionTypes.CHANGE_USER_IMG:\n      return {...state, userImg: action.payload.iconUrl};\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","import { actionTypes } from \"../actions/action-types\";\n\ninterface priceActionType {\n  type: string;\n  payload: number[];\n}\n\nconst priceReducer = (state=[2000,10000], action: priceActionType): number[] => {\n  switch (action.type) {\n    case actionTypes.PRICE_RANGE_LOADED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default priceReducer;","import { actionTypes } from \"../actions/action-types\";\n\ninterface actionType {\n  type: string,\n}\n\nconst errorReducer = (state=false, action: actionType): boolean => {\n  switch (action.type) {\n    case actionTypes.REQUEST_SUCCESS:\n      return false;\n    case actionTypes.REQUEST_FAILURE:\n      return true;\n    default:\n      return state;\n  }\n};\nexport default errorReducer;\n","import { actionTypes } from \"../actions/action-types\";\ninterface filterType {\n  authors: string[];\n  gener: string;\n  price: string;\n  rating: number | null;\n};\n\ninterface actionType extends filterType {\n  type: string;\n}\n\nconst filterState: filterType = {\n  authors: [],\n  gener: '',\n  price: '',\n  rating: null\n};\nconst filterReducer = (state=filterState, action: actionType): filterType => {\n  switch (action.type) {\n    case actionTypes.SET_AUTHORS:\n      return {...state, authors: action.authors};\n    case actionTypes.SET_PRICE:\n      return {...state, price: action.price};\n    case actionTypes.SET_RATING:\n      return {...state, rating: action.rating};\n    case actionTypes.SET_GENER:\n      return {...state, gener: action.gener}\n    default:\n      return state;\n  }\n};\nexport default filterReducer;","import { actionTypes } from \"../actions/action-types\";\nimport { bookType } from \"../actions/bookActions\";\n\ninterface favoriteActionType {\n  type: string;\n  payload: bookType[];\n}\n\nconst initialState: bookType[] = [\n  {\n    id: 0,\n    bookIcon: '',\n    writer: { name: '' },\n    name: '',\n    description: '',\n    rating: 0,\n    price: 0,\n    userId: 0,\n    user: [{ id: 0 }]\n  }\n];\n\nconst favoritesReducer = (state=initialState, action: favoriteActionType): bookType[] => {\n  switch (action.type) {\n    case actionTypes.FAVORITES_LOADED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default favoritesReducer;","import { actionTypes } from \"../actions/action-types\";\nimport { BookReviewsType } from \"../actions/rewiewActions\";\n\nexport interface reviewActionType {\n  type: string;\n  bookReviews: BookReviewsType;\n}\n\nconst reviewState: BookReviewsType = {\n  bookReviews: [\n    {\n      comment: '',\n      grade: 0,\n      id:0,\n      reviewer: {name: '', id: 0}\n    }\n  ],\n  reviewerId: 0\n\n}\n\nconst reviewReducer = (state=reviewState, action: reviewActionType): BookReviewsType => {\n  switch (action.type) {\n    case actionTypes.REVIEWS_LOADED:\n      return action.bookReviews;\n    default:\n      return state;\n    }\n};\nexport default reviewReducer;","import { actionTypes } from '../actions/action-types';\nimport { bookType } from '../actions/bookActions';\n\ninterface bookListAction {\n  type: string,\n  payload: bookType[]\n};\n\ninterface bookListReducerType {\n  books: bookType[];\n  loading: boolean;\n};\n\nconst initialState: bookListReducerType = {\n  books: [{\n    id: 0,\n    bookIcon: '',\n    writer: { name: '' },\n    name: '',\n    description: '',\n    rating: 0,\n    price: 0,\n    userId: 0,\n    user: [{ id: 0 }]\n  }],\n  loading: true\n};\n\n\nconst bookListReducer = (state = initialState, action: bookListAction): bookListReducerType => {\n  switch (action.type) {\n    case actionTypes.BOOKS_LIST_REQUEST:\n      return state;\n    case actionTypes.BOOKS_LIST_SUCCESS:\n      return {\n        books: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default bookListReducer;","import { actionTypes } from '../actions/action-types';\n\nconst sidebarReducer = (state=false, action:{type: string}): boolean => {\n  switch (action.type) {\n    case actionTypes.SHOW_SIDEBAR:\n      return true;\n    case actionTypes.HIDE_SIDEBAR:\n      return false;\n    default:\n      return state;\n  }\n};\nexport default sidebarReducer;","import { actionTypes } from \"../actions/action-types\";\nimport { ViewportWidthType } from \"../actions/viewportActions\";\n\nconst viewportReducer = (state=window.innerWidth, action: ViewportWidthType): number => {\n  switch (action.type) {\n    case actionTypes.SET_VIEWPORT_WIDTH:\n      return action.viewportWidth;\n    default:\n      return state;\n  }\n};\nexport default viewportReducer;","import { actionTypes } from '../actions/action-types';\nimport { SortType } from '../actions/sortActions';\n\ninterface SortReducerType {\n  sortTarget: string;\n  direction: string;\n}\n\nconst sortReducer = (state={sortTarget: 'name', direction: 'ASC'}, action: SortType): SortReducerType => {\n  switch (action.type) {\n    case actionTypes.SET_SORT_DIRECTION:\n      return {...state, direction: action.payload}\n    case actionTypes.SET_SORT_TARGET:\n      return {...state, sortTarget: action.payload};\n    default:\n      return state;\n  }\n};\nexport default sortReducer;","import { actionTypes } from \"../actions/action-types\";\nimport { SetPageType } from \"../actions/pageActions\";\n\nconst initialState ={\n  page: 1,\n  pageCount: 5\n};\n\nconst pageRaducer = (state=initialState, action: SetPageType): {page: number; pageCount: number}=> {\n  switch (action.type) {\n    case actionTypes.SET_PAGE_NUMBER:\n      return {...state, page: action.payload};\n    case actionTypes.SET_PAGE_COUNT:\n      return {...state, pageCount: action.payload};\n    default:\n      return state;\n  }\n};\nexport default pageRaducer;","import { combineReducers } from 'redux';\nimport bookPageReducer from './bookPage';\nimport genersReducer from './geners';\nimport authorsReducer from './authors';\nimport authReducer from './auth';\nimport priceReducer from './price';\nimport errorReducer from './error';\nimport filterReducer from './filter';\nimport favoritesReducer from './favorites';\nimport reviewReducer from './reviews';\nimport bookListReducer from './bookList';\nimport sidebarReducer from './sidebar';\nimport viewportReducer from './viewport';\nimport sortReducer from './sort';\nimport pageRaducer from './page';\n\nexport const reducer = combineReducers({\n  bookList: bookListReducer,\n  bookPage: bookPageReducer,\n  geners: genersReducer,\n  authors: authorsReducer,\n  auth: authReducer,\n  filter: filterReducer,\n  price: priceReducer,\n  favorites: favoritesReducer,\n  reviews: reviewReducer,\n  error: errorReducer,\n  sidebar: sidebarReducer,\n  viewport: viewportReducer,\n  sort: sortReducer,\n  page: pageRaducer\n});\n\nexport type RootState = ReturnType<typeof reducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'nouislider/distribute/nouislider.css';\nimport { reducer } from './reducers';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware())\n  // other store enhancers if any\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}